[{"slug":"articlesoffederationcomwelcome-visitors","title":"articlesoffederationcomwelcome-visitors","synopsis":"A page with 1 items."},{"slug":"closed-farm","title":"Closed farm","date":1418804631295,"synopsis":"Most wiki farms are open. This is for flexibility, and ease of setup. But with a little work they don't have to be."},{"slug":"create-test","title":"create-test","synopsis":"A page with 0 items."},{"slug":"d3-bars","title":"D3 Bars","synopsis":"This is the <i>bar</i> example from the [http://mbostock.github.com/d3/ d3]  distribution.  If you see an error above, don't panic, keep reading. See also [[D3 Line]] example."},{"slug":"d3-line","title":"D3 Line","synopsis":"This is the <i>line</i> example from the [http://mbostock.github.com/d3/ d3]  distribution.  If you see an error above, don't panic, keep reading. See also [[D3 Bars]] example."},{"slug":"december","title":"December","date":1418018748967,"synopsis":"Not sure how this is supposed to work, but here it goes!"},{"slug":"december-2014","title":"December 2014","date":1418882259510,"synopsis":"[[Deploying a Wiki]]"},{"slug":"deploying-a-wiki","title":"Deploying a wiki","date":1418882536486,"synopsis":"There are lots of ways to deploy Federated Wiki. Here we are just talking about the easiest way to deploy the Node version to it's own, otherwise empty, Ubuntu 14.04 VPS from Digital Ocean."},{"slug":"family-of-flags","title":"Family of Flags","date":1418856343410,"synopsis":"Wiki uses the favicon mechanism to label the origin in a browser tab. We call these flags and use them in many other circumstances. We generate them so that they are recognizable as distinct but still part of a family."},{"slug":"frequently-asked-questions","title":"Frequently Asked Questions","date":1382548109219,"synopsis":"As our end user documentation emerges we can expect there to be many questions. We will collect answers here, organize them and then use this to guide improvements."},{"slug":"happening-folks","title":"Happening Folks","date":1418879284971,"synopsis":"This page is maintained as the directory of participants of the course. Visit this page to load Happening participants into your neighborhood."},{"slug":"indie-web-camp","title":"Indie Web Camp","synopsis":"Rather than posting content on many third-party silos of data, we should all begin owning the data we're creating. Publish short status updates on your own domain, and syndicate to Twitter. Publish photos on your own domain, syndicate to Flickr, etc, etc."},{"slug":"javascript","title":"JavaScript","date":1413185552414,"synopsis":"[[Why JavaScript]]? JavaScript is a wonderful language. It is incredibly flexible, dynamic, and expressive. This page is going to attempt to be a collection of the best resources on core JavaScript stuff from the basics to the bleeding edge, with some material original to this wiki in the middle."},{"slug":"javascript-basics","title":"JavaScript Basics","date":1413185113853,"synopsis":"If you are new to JavaScript this is where to start, basic syntax and ideas. The first few links are even good if you are completely new to programming. You may notice some radically different styles and best practices supported by these authors, at this point it's good to keep an open mind and try everything.  We'll worry about how that stuff works for you later."},{"slug":"javascript-callbacks","title":"JavaScript Callbacks","date":1362813497271,"synopsis":"Callbacks are a central idea in JavaScript due to it's asynchronous nature. The idea is that we want something done that may take time (often io, an http request, writing to disk, getting something from the db, etc), and instead of waiting we want to continue on with what we were doing. To handle the results of that action we moved past, we call a callback function when the event loop is free."},{"slug":"javascript-code-smells","title":"JavaScript Code Smells","date":1413434267623,"synopsis":"This is a collection of practices that I think should be avoided in JavaScript. Not absolutely never used, I'll leave that list for another page, or the community at large. But instead a guide to things that should be a flag, maybe I should rethink how I'm doing this and see if I can refactor this code to make it better by avoiding this."},{"slug":"javascript-confused-concepts","title":"JavaScript Confused Concepts","date":1413185468989,"synopsis":"This is the content that originated here and not a set of links. It attempts to answer in detail the question \"What state does my function have access to when it's invoked?\" This turns out to be a complex question, leading to a lot of unexpected behavior. This section will hopefully remove a lot of surprises, allowing us to understand higher level abstractions that rely on these concepts."},{"slug":"javascript-higher-level-abstractions","title":"JavaScript Higher Level Abstractions","date":1413185529034,"synopsis":"These resources build on the rest of our knowledge to create expressive, reusable, easy to interact with code."},{"slug":"javascript-inheritance","title":"JavaScript Inheritance","date":1362725099295,"synopsis":"JavaScript has single, prototypical inheritance. This means that each object can inherit from exactly one other object, any other object. And they can form a chain. You can thus inherit from an arbitrary number of previous objects, in order all the way back to Object.prototype, the default object that all prototype chains lead back to."},{"slug":"javascript-invocation-context","title":"JavaScript Invocation Context","date":1368726291441,"synopsis":"Invocation context is the key to managing the value of `this` within a function. `this` is one way to facilitate code reuse, by making our functions more general. Instead of operating on one specific object in the scope in which they are declared, they can instead operate on the object that is their invocation context."},{"slug":"javascript-mutability","title":"JavaScript Mutability","date":1413435441034,"synopsis":" "},{"slug":"javascript-passing-values","title":"JavaScript Passing Values","date":1357450947043,"synopsis":"Depricated, see [[JavaScript Mutability]] instead."},{"slug":"javascript-scope","title":"JavaScript Scope","date":1346219613009,"synopsis":"JavaScript has lexical, function level scoping. This means that any inner scope has access to the outer scope where it is defined, no matter when/how it is invoked. And that the function is the only unit of scope, something defined within a function is defined inside the whole function. Loop or conditional bodies are irrelevant to scope."},{"slug":"javascript-streams","title":"JavaScript Streams","date":1413704462638,"synopsis":"Streams are an awesome asynchronous io abstraction. Streams come from the Unix tradition, and are one of the most important factors in node modules ability to uphold the [http://en.wikipedia.org/wiki/Unix_philosophy Unix philosophy]."},{"slug":"javascript-style","title":"JavaScript Style","date":1413184475277,"synopsis":"These resources are all about writing code that is less likely to have bugs through using a consistent style and avoiding practices that lead to confusing or hard to debug code. The problem is that this is all subjective material, and a giant bike shed for anyone who feels like arguing about it."},{"slug":"javascript-values","title":"JavaScript Values","date":1346219800917,"synopsis":"A page with 0 items."},{"slug":"journal-duplication","title":"Journal Duplication","date":1416838932489,"synopsis":"The Journal stores new copies of story items each time they are edited. This presumes items are small and edits touch all parts of them. Not true for caption edits of fat images. But, let's consider the Journal an asset library for story items in the few cases where this is an issue."},{"slug":"journal-for-2014","title":"Journal for 2014","date":1418018517783,"synopsis":"This is an example of what [[Fedwiki as Memex-Journal]] might look like. The idea is one stream for many notes which can be occassionally refactored into separate new or exisitng sites."},{"slug":"jquery","title":"jQuery","date":1357794833669,"synopsis":"This is not a comprehensive set of docs about jQuery, not even close. What this attempts to be is the least painful way to get started with DOM manipulation, using an extremely small subset of jQuery."},{"slug":"junk","title":"junk","date":1339881461109,"synopsis":"test"},{"slug":"list-of-pioneers","title":"List of Pioneers","synopsis":"These are (or were) the Smallest Federated Wiki sites that explore one or more features of the emerging federation protocol. We'll stop calling sites pioneers when the federation matures to the point that serious content is trusted to the federation. We're not there yet, intentionally. Come explore with us."},{"slug":"local-editing","title":"Local Editing","synopsis":"Modern browsers can save changes in local storage. Engage this feature by selecting the <b>Local editing</b> option at the bottom of this web page."},{"slug":"misc","title":"misc","date":1348990687771,"synopsis":"This is a utility page, used to hold links to works in progress, orphaned paragraphs, that sort of thing."},{"slug":"my-burning-question-about-wiki-farms","title":"My burning question about wiki farms","date":1418797126221,"synopsis":"There are two motivations for this post:"},{"slug":"nicholas-r-niemeir","title":"nicholas-r-niemeir","synopsis":"I am Nick, an open source developer working in CoffeeScript and JavaScript on the server and in the browser."},{"slug":"nick-niemeir","title":"Nick Niemeir","date":1418884865606,"synopsis":"Nick is a JavaScript nerd, and contributor to [[Smallest Federated Wiki]]."},{"slug":"on-widget-state","title":"On Widget State","date":1348991193036,"synopsis":"Browser based widgets are extremely useful, and Dashku gives is a nice way to create and manage them, however we are left with a very complex question of how to manage the state of a widget in a contextless push based system."},{"slug":"remote-pair-programming","title":"Remote Pair Programming","synopsis":"Software development can greatly benefit from both collaborative and remote work, but combining the two ideas is something that is surprisingly hard to do well.  [https://github.com/m-n m-n] and I have a workable solution going with [http://tmux.sourceforge.net/ Tmux] and [http://mumble.sourceforge.net/ Mumble] hosted on a cloud vps and Google chat to share links/take notes on the side."},{"slug":"sfw-node-todo","title":"SFW Node ToDO","date":1345658247359,"synopsis":"recent changes citation/references"},{"slug":"smallest-federated-wiki","title":"Smallest Federated Wiki","synopsis":"Our new wiki innovates three ways. It shares through federation, composes by refactoring and wraps data with visualization. Follow our open development on GitHub or just watch our work in progress videos here."},{"slug":"test-page","title":"test-page","synopsis":"[[Remote Pair Programming]]\n"},{"slug":"tmp","title":"tmp","date":1418018638562,"synopsis":"A temporary page."},{"slug":"two-sides-of-promises","title":"Two sides of promises","date":1403975967632,"synopsis":"There are at least two ideas known as promises in software. The one most common in JavaScript is the promise for a value that must be fetched asynchronously. The other is a promise for a value that need not be calculated yet. Can these two 'promises' be unified?"},{"slug":"welcome-visitors","title":"Welcome Visitors","date":1418018403322,"synopsis":"Welcome, this is the personal federated wiki of [[Nick Niemeir]], and is currently mostly used to test the express server for [[Smallest Federated Wiki]]. Slowly it will be used more and more for off site storage for my brain, and may eventually develop content interesting to other people, but on that we will have to see..."},{"slug":"what-state-does-my-function-have-access-to","title":"What state does my function have access to?","date":1346223740944,"synopsis":"A page with 0 items."},{"slug":"why-indie-web","title":"Why Indie Web","synopsis":"\"You're here because you know something. What you know you can't explain, but you feel it. You've felt it your entire life, that there's something wrong with the world.\" -- [https://secure.wikimedia.org/wikiquote/en/wiki/The_Matrix Morpheus, The Matrix]"},{"slug":"why-javascript","title":"Why JavaScript","date":1413184814332,"synopsis":"Learning to program in any language is awesome, but what language first? Really there are four I consider, Racket, Python, Ruby, and JavaScript. But my advice always ends up being: learn JavaScript, unless you are really motivated by another language, then learn that language first :)"}]